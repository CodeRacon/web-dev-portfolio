@import "../../../../variables.scss";
@import "../../../../mixins.scss";
@import "../../../../styles.scss";

$strokeWidth: 4px;

.menu {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: calc(100vh - $header-height);
  max-width: 1440px;
  padding-top: 2rem;
  background-color: $background;

  .tilt {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    padding: 0 $section-padding-960 1.25rem $section-padding-960;
    width: 100%;
    max-height: 400px;

    flex-grow: 1;
    background-color: $text;
    clip-path: polygon(0 0, 100% 40%, 100% 100%, 0% 100%);

    @media (width <= 428px) {
      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-end;
      gap: 1.5rem;
    }

    @media (width <= 390px) {
      max-height: 240px;
    }

    @media (width <= 375px) {
      gap: 5rem;
    }

    .cta {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin-bottom: -0.5rem;

      span {
        @include projectHeading;
        color: $background;

        &:hover {
          color: $accent;
        }
      }

      a {
        @include sectionText;
        font-size: 1rem;
        color: $background;
        width: fit-content;
        cursor: pointer;
        transition: all 0.125s ease-in-out;

        &:hover {
          color: $accent;
        }

        &:hover .underline {
          width: 100%;
          background-color: $accent;
          opacity: 1;
        }
      }

      .underline {
        width: 0;
        height: 2px;
        margin-top: -2px;
        background-color: $background;
        opacity: 0;
        transition: all 0.15s ease-in-out;
      }
    }

    .external-links {
      display: flex;
      justify-content: flex-end;
      align-items: flex-end;
      gap: 1.125rem;

      @media (width <= 428px) {
        width: 100%;
      }

      a {
        position: relative;

        &::after {
          content: "";
          position: absolute;
          width: 0%;
          height: 4px;
          bottom: -4px;
          left: 0;
          background-color: $accent;
          opacity: 0;
          transition: all 0.15s ease-in-out;

          @media (width <= 375px) {
            height: 2px;
            bottom: -2px;
          }
        }

        &:hover::after {
          width: 100%;
          opacity: 1;
        }

        &:hover {
          filter: invert(46%) sepia(59%) saturate(898%) hue-rotate(318deg)
            brightness(80%) contrast(98%);
        }
      }

      img {
        width: 32px;

        @media (width <= 375px) {
          transform: scale(0.75);
        }
      }
    }
  }

  nav {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    gap: 0.875rem;

    span {
      position: relative;
      @include navLink;

      &:hover {
        color: $accent;
      }

      &::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
      }

      &::before {
        width: 100%;
        height: 100%;
        border: $strokeWidth $text solid;
      }

      &::after {
        content: "";
        position: absolute;
        width: calc(100% + 0.5rem);
        height: calc(100% + 0.5rem);
        opacity: 1;

        bottom: -$strokeWidth;
        border-bottom: $strokeWidth solid $text;

        animation-name: strokeOut;
        animation-duration: 0.275s;
        animation-fill-mode: both;
        animation-timing-function: ease-in-out;
      }

      &:active::before,
      &:hover::after {
        opacity: 1;
      }

      &:hover::after {
        animation-name: strokeIn;
      }
    }
  }
}

@keyframes strokeIn {
  0% {
    height: 50%;
    width: 12.5%;
    left: -$strokeWidth;
  }

  30% {
    height: $strokeWidth;
    width: 60%;
    left: -$strokeWidth;
  }

  100% {
    height: $strokeWidth;
    width: 30%;
    left: calc(70% + $strokeWidth);
  }
}

@keyframes strokeOut {
  0% {
    height: $strokeWidth;
    width: 30%;
    left: 70%;
  }

  70% {
    height: $strokeWidth;
    width: 60%;
    left: -$strokeWidth;
  }

  100% {
    border-left: $strokeWidth solid $text;
    height: 50%;
    width: 12.5%;
    left: -$strokeWidth;
  }
}
